% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/probdistz.R
\name{probdistz}
\alias{probdistz}
\title{Probability Distribution and Z-Score Calculation Function}
\usage{
probdistz(data, env_cols, yield_cols, smooth = TRUE)
}
\arguments{
\item{data}{A data frame containing the dataset to be analyzed.}

\item{env_cols}{A character vector of column names representing environmental variables in the dataset. These columns will be treated as factors.}

\item{yield_cols}{A character vector of column names representing yield variables in the dataset. These columns will be treated as numeric.}

\item{smooth}{A logical value indicating whether to generate smoothed PDF, CDF, and Z-scores. If \code{TRUE}, the function will generate smoothed values over a range of the yield data. Defaults to \code{TRUE}.}
}
\value{
A data frame containing the calculated PDF, CDF, and Z-scores, with optional smoothed values. The data frame includes the original environmental variables and yield values, along with the new calculated columns.
}
\description{
The \code{probdistz} function calculates the probability density function (PDF), cumulative density function (CDF), and Z-scores for specified yield columns in a dataset, optionally generating smoothed data.
}
\details{
This function processes the input dataset by first ensuring that the specified environmental and yield columns exist and are in the correct format. It then generates all unique combinations of the environmental variables and calculates the PDF, CDF, and Z-scores for each combination and yield column. If \code{smooth} is \code{TRUE}, the function generates smoothed data over a specified range of the yield values.

The function returns a data frame containing the calculated values, including the original environmental variables and yield values, as well as the calculated PDF, CDF, and Z-scores for each combination of environmental variables.
}
\examples{
# Example usage:
# Assuming `data` is your dataset, `env_cols` are your environmental columns,
# and `yield_cols` are your yield columns:
result= probdistz(data = your_data, env_cols = c("env1", "env2"), yield_cols = c("yield1", "yield2"))

}
